{"ast":null,"code":"var _jsxFileName = \"/Users/ignaciourrutiagajardo/Documents/Web/PlanningAdvisors/pa-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Table from 'react-bootstrap/Table';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { numericSortFunc } from './auxFunctions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StockTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.prevColumns = [];\n    this.state = {\n      columns: ['date'],\n      stock_name: ['BTC_USD'],\n      data: {}\n    };\n  }\n\n  getStockData() {\n    const active_columns = this.props.active_columns;\n    const stock_name = this.props.active_stock;\n    fetch(`http://localhost:3001/get/${stock_name}/${active_columns}`).then(response => {\n      return response.json();\n    }).then(fetched_data => {\n      this.setState({\n        data: fetched_data\n      });\n    });\n  }\n\n  render() {\n    if (this.props.active_columns !== this.prevColumns || this.props.active_stock !== this.prevStock) {\n      this.getStockData();\n      this.prevColumns = this.props.active_columns;\n      this.prevStock = this.props.active_stock;\n    }\n\n    const isDataEmpty = Object.keys(this.state.data).length === 0;\n\n    if (!isDataEmpty) {\n      // return <BootstrapTable keyField='name' data = {this.state.data}/>\n      return /*#__PURE__*/_jsxDEV(JSONTable, {\n        data: this.state.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" No hay datos disponibles \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n}\n\nclass MultipleStockTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.prevColumns = [];\n    this.prevStockList = [];\n    this.state = {\n      data: {}\n    };\n  }\n\n  componentDidMount() {\n    this.getStocksData();\n  }\n\n  componentDidUpdate() {\n    if (this.props.stocks_list !== this.prevStockList) {\n      this.getStocksData();\n      this.prevColumns = this.props.active_columns;\n      this.prevStockList = this.props.stocks_list;\n    }\n  }\n\n  async getStocksData() {\n    let active_columns = this.props.active_columns;\n    active_columns = Object.keys(this.props.columnInfo).slice(1);\n    console.log(active_columns);\n    const stocks_list = this.props.stocks_list;\n    var stocksData = [];\n\n    if (active_columns.length === 0) {\n      for (let stock_name of stocks_list) {\n        var new_row = {};\n        new_row['name'] = stock_name;\n        stocksData.push(new_row);\n        this.setState({\n          data: stocksData\n        });\n      }\n\n      return;\n    }\n\n    for await (let stock_name of stocks_list) {\n      fetch(`http://localhost:3001/get/${stock_name}/${active_columns}`).then(response => {\n        return response.json();\n      }).then(fetched_data => {\n        var new_row = {\n          'name': fetched_data['stock_name']\n        };\n        Object.assign(new_row, fetched_data['data'][0]);\n        stocksData.push(new_row);\n        this.setState({\n          data: stocksData\n        });\n      });\n    }\n  }\n\n  render() {\n    let active_columns = ['name'].concat(this.props.active_columns);\n    active_columns = active_columns = Object.keys(this.props.columnInfo);\n    const columns = active_columns.map(col => {\n      let columnData = {\n        dataField: col,\n        text: this.props.columnInfo[col]['text'],\n        sort: true,\n        type: this.props.columnInfo[col]['type']\n      };\n\n      if (this.props.columnInfo[col]['formatter']) {\n        columnData['formatter'] = this.props.columnInfo[col]['formatter'];\n      }\n\n      if (this.props.columnInfo[col]['sortFunc']) {\n        columnData['sortFunc'] = this.props.columnInfo[col]['sortFunc'];\n      }\n\n      if (this.props.columnInfo[col]['style']) {\n        columnData['style'] = this.props.columnInfo[col]['style'];\n      }\n\n      if (this.props.columnInfo[col]['hidden']) {\n        columnData['hidden'] = this.props.columnInfo[col]['hidden'];\n      }\n\n      return columnData;\n    });\n    const isDataEmpty = Object.keys(this.state.data).length === 0;\n\n    if (!isDataEmpty) {\n      return /*#__PURE__*/_jsxDEV(BootstrapTable, {\n        striped: true,\n        hover: true,\n        condensed: true,\n        keyField: \"name\",\n        data: this.state.data,\n        columns: columns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 10\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No hay datos disponibles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }, this);\n    }\n  }\n\n}\n\nclass AllocationPanel extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Allocation Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass PerformancePanel extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Performance Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nfunction JSONTable(props) {\n  // Usamos las keys como headers\n  let headers = Object.keys(props.data[0]);\n  let tableHeaders;\n\n  if (props.headers) {\n    tableHeaders = headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n      children: [\" \", props.headers[header]]\n    }, header, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }, this));\n  } else {\n    tableHeaders = headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n      children: [\" \", header]\n    }, header, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }, this));\n  }\n\n  const tableHead = /*#__PURE__*/_jsxDEV(\"thead\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: tableHeaders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 28\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 21\n  }, this); // Colocar llaves como input\n\n\n  var keys = Object.keys(props.data[0]);\n  const listRows = []; // Iteramos sobre cada objeto que será una fila\n\n  let i = 1;\n\n  for (var obj of props.data) {\n    try {\n      let listData = [];\n      let j = 1; // Iteramos sobre cada elemento que será una celda\n\n      for (const k of keys) {\n        let value;\n\n        if (props.columnManage && props.columnManage[k]) {\n          let f = props.columnManage[k];\n          value = f(obj[k]);\n        } else {\n          value = obj[k];\n        }\n\n        listData.push( /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", value, \" \"]\n        }, j, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 23\n        }, this));\n        j++;\n      } // console.log(listData);\n\n\n      var dataTR = /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: listData\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 20\n      }, this); // var element = <tbody key={obj.id} > {dataTR} </tbody> \n\n\n      listRows.push(dataTR);\n      i++;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  var tableBody = /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: listRows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 19\n  }, this); // const listRows = data.data.map((item) => \n  //   <li key = {item.id}>{  item.id}</li>)\n\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    responsive: \"sm\",\n    children: [tableHead, tableBody]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 11\n  }, this);\n}\n\n_c = JSONTable;\n\nclass SingleStockData extends React.Component {\n  constructor(props) {\n    super(props); // Lista de columnas\n\n    this.columns = ['open', 'close', 'high', 'low', 'volume', 'adjclose', 'daily_return', 'percentage_return', 'rsi_3d', 'rsi_5d', 'rsi_14d', 'rsi_25d']; // Creamos diccionario columns con columnas vacías\n\n    this.state = {\n      active_columns: ['date'],\n      active_stock: 'BTC_USD'\n    };\n    this.handleColumnChange = this.handleColumnChange.bind(this);\n    this.handleTickrChange = this.handleTickrChange.bind(this);\n  }\n\n  handleColumnChange(column_dict) {\n    const active_columns_aux = ['date'];\n\n    for (var col of this.columns) {\n      if (column_dict[col]) {\n        active_columns_aux.push(col);\n      }\n    }\n\n    this.setState({\n      active_columns: active_columns_aux\n    });\n  }\n\n  handleTickrChange(stock_name) {\n    this.setState({\n      active_stock: stock_name\n    });\n    console.log(\"Nuevo stock: \" + stock_name);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panels\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-info\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            onColumnChange: this.handleColumnChange,\n            columns: this.columns\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            onChange: this.handleTickrChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-allocation\",\n        children: /*#__PURE__*/_jsxDEV(AllocationPanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-balance\",\n        children: /*#__PURE__*/_jsxDEV(PerformancePanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-positions\",\n        children: /*#__PURE__*/_jsxDEV(StockTable, {\n          active_columns: this.state.active_columns,\n          update_columns: true,\n          active_stock: this.state.active_stock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass MultipleStockData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.columns = ['date', 'open', 'close', 'high', 'low', 'volume', 'adjclose', 'daily_return', 'percentage_return', 'rsi_3d', 'rsi_5d', 'rsi_14d', 'rsi_25d'];\n    this.headers = {\n      'date': 'Fecha',\n      'name': 'Acción',\n      'open': 'Abrir',\n      'close': 'Cierre',\n      'high': 'Max',\n      'low': 'Min',\n      'volume': 'Volumen',\n      'adjclose': 'Cierre ajus.',\n      'daily_return': 'Rentabilidad por dia',\n      'percentage_return': 'Rentabilidad %',\n      'rsi_3d': 'RSI 3 días',\n      'rsi_5d': 'RSI 5 días',\n      'rsi_14d': 'RSI 14 días',\n      'rsi_25d': 'RSI 25 días'\n    };\n    this.columnManage = {\n      'name': name => {\n        return name.toUpperCase();\n      },\n      'date': dateString => {\n        let date = new Date(dateString);\n        return date.toLocaleDateString();\n      },\n      'open': n => {\n        return this.roundDecimals(n, 2);\n      },\n      'close': n => {\n        return this.roundDecimals(n, 2);\n      },\n      'high': n => {\n        return this.roundDecimals(n, 2);\n      },\n      'low': n => {\n        return this.roundDecimals(n, 2);\n      },\n      'volume': n => {\n        return this.roundDecimals(n, 2);\n      },\n      'adjclose': n => {\n        return this.roundDecimals(n, 2);\n      },\n      'daily_return': n => {\n        return this.roundDecimals(n, 2);\n      },\n      'percentage_return': n => {\n        return this.roundDecimals(n, 2);\n      },\n      'rsi_3d': n => {\n        return this.roundDecimals(n, 2);\n      },\n      'rsi_5d': n => {\n        return this.roundDecimals(n, 2);\n      },\n      'rsi_14d': n => {\n        return this.roundDecimals(n, 2);\n      },\n      'rsi_25d': n => {\n        return this.roundDecimals(n, 2);\n      }\n    };\n    this.columnInfo = {\n      'name': {\n        'text': 'Accion',\n        'formatter': name => {\n          return name.toUpperCase();\n        },\n        'type': 'string',\n        'style': {\n          'font-weight': 'bold'\n        }\n      },\n      'date': {\n        'text': 'Fecha',\n        'formatter': dateString => {\n          let date = new Date(dateString);\n          return date.toLocaleDateString();\n        },\n        'type': 'string',\n        'hidden': true\n      },\n      'open': {\n        'text': 'Abrir',\n        'formatter': n => {\n          return this.roundDecimals(n, 2);\n        },\n        'type': 'number',\n        'sortFunc': numericSortFunc,\n        'hidden': true\n      },\n      'close': {\n        'text': 'Cierre',\n        'formatter': n => {\n          return this.roundDecimals(n, 2);\n        },\n        'type': 'number',\n        'sortFunc': numericSortFunc,\n        'hidden': true\n      },\n      'high': {\n        'text': 'Max',\n        'formatter': n => {\n          return this.roundDecimals(n, 2);\n        },\n        'type': 'number',\n        'sortFunc': numericSortFunc,\n        'hidden': true\n      },\n      'low': {\n        'text': 'Min',\n        'formatter': n => {\n          return this.roundDecimals(n, 2);\n        },\n        'type': 'number',\n        'sortFunc': numericSortFunc,\n        'hidden': true\n      },\n      'volume': {\n        'text': 'Volumen',\n        'formatter': n => {\n          return this.roundDecimals(n, 2);\n        },\n        'type': 'number',\n        'sortFunc': numericSortFunc,\n        'hidden': true\n      },\n      'adjclose': {\n        'text': 'Cierre ajus.',\n        'formatter': n => {\n          return this.roundDecimals(n, 2);\n        },\n        'type': 'number',\n        'sortFunc': numericSortFunc\n      },\n      'daily_return': {\n        'text': 'Rentabilidad por dia',\n        'formatter': n => {\n          return this.roundDecimals(n, 2);\n        },\n        'type': 'number',\n        'sortFunc': numericSortFunc\n      },\n      'percentage_return': {\n        'text': 'Rentabilidad %',\n        'formatter': n => {\n          return this.roundDecimals(n, 2);\n        },\n        'type': 'number',\n        'sortFunc': numericSortFunc\n      },\n      'rsi_3d': {\n        'text': 'RSI 3 días',\n        'formatter': n => {\n          return this.roundDecimals(n, 2);\n        },\n        'type': 'number',\n        'sortFunc': numericSortFunc,\n        'style': this.styleRanges(30, 70)\n      },\n      'rsi_5d': {\n        'text': 'RSI 5 días',\n        'formatter': n => {\n          return this.roundDecimals(n, 2);\n        },\n        'type': 'number',\n        'sortFunc': numericSortFunc,\n        'style': this.styleRanges(30, 70)\n      },\n      'rsi_14d': {\n        'text': 'RSI 14 días',\n        'formatter': n => {\n          return this.roundDecimals(n, 2);\n        },\n        'type': 'number',\n        'sortFunc': numericSortFunc,\n        'style': this.styleRanges(30, 70)\n      },\n      'rsi_25d': {\n        'text': 'RSI 25 días',\n        'formatter': n => {\n          return this.roundDecimals(n, 2);\n        },\n        'type': 'number',\n        'sortFunc': numericSortFunc,\n        'style': this.styleRanges(30, 70)\n      }\n    };\n    this.state = {\n      stocks_list: [],\n      active_columns: [],\n      columnInfo: this.columnInfo\n    };\n    this.handleColumnChange = this.handleColumnChange.bind(this);\n  }\n\n  styleRanges(a, b) {\n    return function callback(cell, row, rowIndex, colIndex) {\n      if (+cell > b) {\n        return {\n          color: 'red'\n        };\n      } else if (+cell < a) {\n        return {\n          color: 'green'\n        };\n      }\n    };\n  }\n\n  roundDecimals(n, decimals) {\n    return Math.round(n * 10 ** decimals) / 10 ** decimals;\n  }\n\n  getStocksList() {\n    fetch(`http://localhost:3001/stocksList`).then(response => {\n      return response.json();\n    }).then(fetched_data => {\n      this.setState({\n        stocks_list: fetched_data\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getStocksList();\n  }\n\n  handleColumnChange(column_dict) {\n    let auxColumnInfo = this.state.columnInfo;\n    const active_columns_aux = [];\n\n    for (var col of this.columns) {\n      auxColumnInfo[col]['hidden'] = !column_dict[col];\n\n      if (column_dict[col]) {\n        active_columns_aux.push(col);\n      }\n    }\n\n    this.setState({\n      active_columns: active_columns_aux,\n      columnInfo: auxColumnInfo\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panels\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-info\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          onColumnChange: this.handleColumnChange,\n          columns: this.columns,\n          optionLabels: this.headers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-positions\",\n        children: /*#__PURE__*/_jsxDEV(MultipleStockTable, {\n          active_columns: this.state.active_columns,\n          stocks_list: this.state.stocks_list,\n          headers: this.headers,\n          columnInfo: this.state.columnInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Checkbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.options = this.props.columns;\n    this.state = {\n      options: {}\n    };\n\n    if (this.props.optionLabels) {\n      this.optionLabels = this.props.optionLabels;\n    } else {\n      this.optionLabels = {};\n\n      for (let col of this.props.columns) {\n        this.optionLabels[col] = col;\n      }\n    }\n\n    for (var option of this.options) {\n      this.state.options[option] = false;\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.checked;\n    const name = target.name; // Creamos variable auxiliar que modificaremos y asignaremos al estado actual\n\n    var aux_options = this.state.options;\n    aux_options[name] = value;\n    this.props.onColumnChange(aux_options);\n  }\n\n  handleSubmit(event) {\n    alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    // const value = this.state.value;\n    const listBox = this.options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: this.handleChange,\n          name: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 9\n        }, this), \" \", this.optionLabels[option]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 7\n      }, this)\n    }, option, false, {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 5\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handlleSubmit,\n      children: listBox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass TextInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    const value = this.state.value;\n    event.preventDefault();\n    this.props.onChange(value);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Stock name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.value,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Calcular\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nlet multiple_stock_data = true;\nlet stock_data;\nmultiple_stock_data ? stock_data = /*#__PURE__*/_jsxDEV(MultipleStockData, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 616,\n  columnNumber: 36\n}, this) : stock_data = /*#__PURE__*/_jsxDEV(SingleStockData, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 616,\n  columnNumber: 72\n}, this);\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: stock_data\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 619,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n/* \nTo-do:\n  - Ordenar códigos (Modularizar, eliminar código no usado, optimizar)\n  - Manejar funciones de subida de datos\n  - Mostrar / Borrar columnas desde tabla y no desde donde se mandan los datos\n  - Subir a la red\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"JSONTable\");","map":{"version":3,"sources":["/Users/ignaciourrutiagajardo/Documents/Web/PlanningAdvisors/pa-app/src/index.js"],"names":["React","ReactDOM","Table","BootstrapTable","numericSortFunc","StockTable","Component","constructor","props","prevColumns","state","columns","stock_name","data","getStockData","active_columns","active_stock","fetch","then","response","json","fetched_data","setState","render","prevStock","isDataEmpty","Object","keys","length","MultipleStockTable","prevStockList","componentDidMount","getStocksData","componentDidUpdate","stocks_list","columnInfo","slice","console","log","stocksData","new_row","push","assign","concat","map","col","columnData","dataField","text","sort","type","AllocationPanel","PerformancePanel","JSONTable","headers","tableHeaders","header","tableHead","listRows","i","obj","listData","j","k","value","columnManage","f","dataTR","e","error","tableBody","SingleStockData","handleColumnChange","bind","handleTickrChange","column_dict","active_columns_aux","MultipleStockData","name","toUpperCase","dateString","date","Date","toLocaleDateString","n","roundDecimals","styleRanges","a","b","callback","cell","row","rowIndex","colIndex","color","decimals","Math","round","getStocksList","auxColumnInfo","Checkbox","options","optionLabels","option","handleChange","handleSubmit","event","target","checked","aux_options","onColumnChange","alert","preventDefault","listBox","handlleSubmit","TextInput","onChange","multiple_stock_data","stock_data","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Table from 'react-bootstrap/Table'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport {numericSortFunc} from './auxFunctions';\n\nclass StockTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.prevColumns = [];\n\n    this.state = {\n      columns: ['date'],\n      stock_name: ['BTC_USD'],\n      data: {}\n    }\n  }\n\n  getStockData() {\n    const active_columns = this.props.active_columns;\n    const stock_name = this.props.active_stock;\n    fetch(`http://localhost:3001/get/${stock_name}/${active_columns}`)\n    .then(response => {\n      return response.json();\n    })\n    .then(fetched_data => {\n      this.setState({\n        data: fetched_data\n      });\n    })\n  }\n\n  render(){\n   if (this.props.active_columns !== this.prevColumns || this.props.active_stock !== this.prevStock){\n     this.getStockData();\n     this.prevColumns = this.props.active_columns;\n     this.prevStock = this.props.active_stock;\n   }\n\n    const isDataEmpty = Object.keys(this.state.data).length === 0;\n    if (!isDataEmpty) { \n      // return <BootstrapTable keyField='name' data = {this.state.data}/>\n      return <JSONTable data={this.state.data}/>; \n    }\n    else{\n      return <div> No hay datos disponibles </div>\n    }\n  }\n}\n\nclass MultipleStockTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.prevColumns = [];\n    this.prevStockList = [];\n\n    this.state = {\n      data: {}\n    }\n  }\n\ncomponentDidMount(){\n  this.getStocksData();\n}\n\ncomponentDidUpdate(){\n  if (this.props.stocks_list !== this.prevStockList){\n    this.getStocksData();\n    this.prevColumns = this.props.active_columns;\n    this.prevStockList = this.props.stocks_list;\n  }\n}\n\n async getStocksData() {\n    let active_columns = this.props.active_columns;\n    active_columns = Object.keys(this.props.columnInfo).slice(1)\n    console.log(active_columns)\n    const stocks_list = this.props.stocks_list;\n    var stocksData = [];\n\n  if (active_columns.length === 0) {\n    for (let stock_name of stocks_list){\n      var new_row = {};\n      new_row['name'] = stock_name;\n\n      stocksData.push(new_row)\n\n      this.setState({data: stocksData});\n    }\n    return;\n  }\n\n    for await (let stock_name of stocks_list){\n      fetch(`http://localhost:3001/get/${stock_name}/${active_columns}`)\n      .then(response => {\n        return response.json();\n      })\n      .then(fetched_data => {\n        var new_row = {\n          'name': fetched_data['stock_name']\n        }\n        Object.assign(new_row, fetched_data['data'][0]);\n\n        stocksData.push(new_row)\n\n        this.setState({\n          data: stocksData\n        })\n      })\n    }\n\n  }\n\n  render(){\n    let active_columns = ['name'].concat(this.props.active_columns);\n    active_columns = active_columns = Object.keys(this.props.columnInfo)\n\n    const columns = active_columns.map( (col) => {\n      let columnData = {\n        dataField: col,\n        text: this.props.columnInfo[col]['text'],\n        sort: true,\n        type: this.props.columnInfo[col]['type']\n      }\n      if (this.props.columnInfo[col]['formatter']){\n        columnData['formatter'] = this.props.columnInfo[col]['formatter']\n      }\n      if (this.props.columnInfo[col]['sortFunc']){\n        columnData['sortFunc'] = this.props.columnInfo[col]['sortFunc'];\n      }\n      if (this.props.columnInfo[col]['style']){\n        columnData['style'] = this.props.columnInfo[col]['style'];\n      }\n      if (this.props.columnInfo[col]['hidden']){\n        columnData['hidden'] = this.props.columnInfo[col]['hidden'];\n      }\n\n      return(columnData);\n    })\n\n     const isDataEmpty = Object.keys(this.state.data).length === 0;\n     if (!isDataEmpty) { \n       return (\n         <BootstrapTable striped hover condensed keyField='name' data={this.state.data} columns={columns}/>\n       );  \n     }\n     else{\n       return <div>No hay datos disponibles</div>\n     }\n   }\n\n}\n\nclass AllocationPanel extends React.Component {\n  render() {\n    return <p>Allocation Panel</p>\n  }\n}\n\nclass PerformancePanel extends React.Component {\n  render() {\n    return <p>Performance Panel</p>\n  }\n}\n\nfunction JSONTable(props) {\n  // Usamos las keys como headers\n  let headers = Object.keys(props.data[0]);\n  let tableHeaders;\n\n  if (props.headers) {\n    tableHeaders = headers.map((header) =>\n    <th key={header}> {props.headers[header]}</th> );\n  }\n  else {\n    tableHeaders = headers.map((header) =>\n    <th key={header}> {header}</th>);\n  }\n  const tableHead = <thead><tr>{tableHeaders}</tr></thead>;\n\n  // Colocar llaves como input\n  var keys = Object.keys(props.data[0]);\n  const listRows = [];\n\n  // Iteramos sobre cada objeto que será una fila\n  let i = 1;\n  for (var obj of props.data){\n    try {\n      let listData = [];\n      let j = 1;\n      // Iteramos sobre cada elemento que será una celda\n      for (const k of keys){\n        let value;\n        if (props.columnManage && props.columnManage[k]){\n          let f = props.columnManage[k];\n          value = f(obj[k]);\n        }\n        else {\n          value = obj[k];\n        }\n        listData.push(<td key={j}> {value} </td>);\n        j ++;\n      }\n      // console.log(listData);\n      var dataTR = <tr key={i}>{listData}</tr>\n      // var element = <tbody key={obj.id} > {dataTR} </tbody> \n      listRows.push(dataTR);\n      i++;\n    } catch (e) {console.error(e)}\n    }\n\n  var tableBody = <tbody>{listRows}</tbody>\n  // const listRows = data.data.map((item) => \n  //   <li key = {item.id}>{  item.id}</li>)\n  return (<Table striped bordered hover responsive=\"sm\">{tableHead}{tableBody}</Table>)  \n}\n\nclass SingleStockData extends React.Component {\n  constructor(props){\n    super(props);\n\n    // Lista de columnas\n    this.columns = ['open', 'close', 'high', 'low', 'volume', 'adjclose', 'daily_return', 'percentage_return', 'rsi_3d', 'rsi_5d', 'rsi_14d', 'rsi_25d'];\n    // Creamos diccionario columns con columnas vacías\n    this.state = {\n      active_columns: ['date'],\n      active_stock: 'BTC_USD'\n    };\n\n    this.handleColumnChange = this.handleColumnChange.bind(this);\n    this.handleTickrChange = this.handleTickrChange.bind(this);\n  }\n  \n  handleColumnChange(column_dict) {\n    const active_columns_aux = ['date']\n    for (var col of this.columns) {\n      if (column_dict[col]) {\n        active_columns_aux.push(col)\n      }\n    }\n    this.setState({\n      active_columns: active_columns_aux\n    });\n  }\n\n  handleTickrChange(stock_name) {\n    this.setState({\n      active_stock: stock_name\n    });\n    console.log(\"Nuevo stock: \" + stock_name);\n  }\n\n  render() {\n    return (\n      <div className=\"panels\">\n        <div className=\"panel-info\">\n          <div>\n\n          <Checkbox\n          onColumnChange = {this.handleColumnChange}\n          columns = {this.columns}\n          />\n\n          <TextInput\n          onChange = {this.handleTickrChange}\n          />\n\n          </div>\n        </div>\n        <div className=\"panel-allocation\">\n          <AllocationPanel />\n        </div>\n        <div className=\"panel-balance\">\n          <PerformancePanel/>\n        </div>\n        <div className=\"panel-positions\">\n          {<StockTable\n          active_columns = {this.state.active_columns} \n          update_columns = {true}\n          active_stock = {this.state.active_stock}\n          />}\n          \n     </div>   \n     </div>\n    )\n  }\n}\n\nclass MultipleStockData extends React.Component{\n  constructor(props){\n    super(props);\n    this.columns = ['date','open', 'close', 'high', 'low', 'volume', 'adjclose', 'daily_return', 'percentage_return', 'rsi_3d', 'rsi_5d', 'rsi_14d', 'rsi_25d'];\n    this.headers = {\n      'date': 'Fecha',\n      'name': 'Acción',\n      'open': 'Abrir',\n      'close': 'Cierre',\n      'high': 'Max',\n      'low': 'Min',\n      'volume': 'Volumen',\n      'adjclose': 'Cierre ajus.',\n      'daily_return': 'Rentabilidad por dia',\n      'percentage_return': 'Rentabilidad %',\n      'rsi_3d': 'RSI 3 días',\n      'rsi_5d': 'RSI 5 días',\n      'rsi_14d': 'RSI 14 días',\n      'rsi_25d': 'RSI 25 días',\n    };\n\n    this.columnManage = {\n      'name': (name) => {return name.toUpperCase();},\n      'date': (dateString) => {\n        let date = new Date(dateString);\n        return date.toLocaleDateString();\n      },\n      'open': (n) => {return this.roundDecimals(n,2)},\n      'close': (n) => {return this.roundDecimals(n,2)},\n      'high': (n) => {return this.roundDecimals(n,2)},\n      'low': (n) => {return this.roundDecimals(n,2)},\n      'volume': (n) => {return this.roundDecimals(n,2)},\n      'adjclose': (n) => {return this.roundDecimals(n,2)},\n      'daily_return': (n) => {return this.roundDecimals(n,2)},\n      'percentage_return': (n) => {return this.roundDecimals(n,2)},\n      'rsi_3d': (n) => {return this.roundDecimals(n,2)},\n      'rsi_5d': (n) => {return this.roundDecimals(n,2)},\n      'rsi_14d': (n) => {return this.roundDecimals(n,2)},\n      'rsi_25d': (n) => {return this.roundDecimals(n,2)},\n    }\n\n    this.columnInfo = {\n      'name': {\n        'text': 'Accion',\n        'formatter': (name) => {return name.toUpperCase();},\n        'type': 'string',\n        'style': {\n          'font-weight': 'bold'}\n      },\n      'date': {\n        'text': 'Fecha',\n        'formatter': (dateString) => {\n          let date = new Date(dateString);\n          return date.toLocaleDateString();\n        },\n        'type': 'string',\n        'hidden': true\n      },\n      'open': {\n        'text': 'Abrir',\n        'formatter': (n) => {return this.roundDecimals(n,2)},\n        'type': 'number',\n        'sortFunc': numericSortFunc,\n        'hidden': true\n      },\n      'close': {\n        'text': 'Cierre',\n        'formatter': (n) => {return this.roundDecimals(n,2)},\n        'type': 'number',\n        'sortFunc': numericSortFunc,\n        'hidden': true\n      },\n      'high': {\n        'text': 'Max',\n        'formatter': (n) => {return this.roundDecimals(n,2)},\n        'type': 'number',\n        'sortFunc': numericSortFunc,\n        'hidden': true\n      },\n      'low': {\n        'text': 'Min',\n        'formatter': (n) => {return this.roundDecimals(n,2)},\n        'type': 'number',\n        'sortFunc': numericSortFunc,\n        'hidden': true\n      },\n      'volume': {\n        'text': 'Volumen',\n        'formatter': (n) => {return this.roundDecimals(n,2)},\n        'type': 'number',\n        'sortFunc': numericSortFunc,\n        'hidden': true\n      },\n      'adjclose': {\n        'text': 'Cierre ajus.',\n        'formatter': (n) => {return this.roundDecimals(n,2)},\n        'type': 'number',\n        'sortFunc': numericSortFunc\n      },\n      'daily_return': {\n        'text': 'Rentabilidad por dia',\n        'formatter': (n) => {return this.roundDecimals(n,2)},\n        'type': 'number',\n        'sortFunc': numericSortFunc\n      },\n      'percentage_return': {\n        'text': 'Rentabilidad %',\n        'formatter': (n) => {return this.roundDecimals(n,2)},\n        'type': 'number',\n        'sortFunc': numericSortFunc\n      },\n      'rsi_3d': {\n        'text': 'RSI 3 días',\n        'formatter': (n) => {return this.roundDecimals(n,2)},\n        'type': 'number',\n        'sortFunc': numericSortFunc,\n        'style': this.styleRanges(30,70)\n      },\n      'rsi_5d': {\n        'text': 'RSI 5 días',\n        'formatter': (n) => {return this.roundDecimals(n,2)},\n        'type': 'number',\n        'sortFunc': numericSortFunc,\n        'style': this.styleRanges(30,70)\n      },\n      'rsi_14d': {\n        'text': 'RSI 14 días',\n        'formatter': (n) => {return this.roundDecimals(n,2)},\n        'type': 'number',\n        'sortFunc': numericSortFunc,\n        'style': this.styleRanges(30,70)\n      },\n      'rsi_25d': {\n        'text': 'RSI 25 días',\n        'formatter': (n) => {return this.roundDecimals(n,2)},\n        'type': 'number',\n        'sortFunc': numericSortFunc,\n        'style': this.styleRanges(30,70)\n      }\n    };\n\n    this.state = {\n      stocks_list: [],\n      active_columns: [],\n      columnInfo: this.columnInfo\n    }\n    this.handleColumnChange = this.handleColumnChange.bind(this);\n  }\n\n  styleRanges(a,b){\n    return (\n      function callback(cell, row, rowIndex, colIndex) {\n        if (+cell > b){\n          return ({color: 'red'});\n        } else if (+cell < a){\n          return ({color: 'green'});\n        }\n      }\n\n    )}\n\n  roundDecimals(n, decimals) {\n    return(Math.round( n * (10**decimals)) / (10**decimals) )\n  }\n\n  getStocksList() {\n    fetch(`http://localhost:3001/stocksList`)\n    .then(response => {\n      return response.json();\n    })\n    .then(fetched_data => {\n      this.setState({\n        stocks_list: fetched_data\n      });\n    })\n  }\n\n  componentDidMount() {\n    this.getStocksList();\n  }\n \n  handleColumnChange(column_dict) {\n    let auxColumnInfo = this.state.columnInfo;\n\n    const active_columns_aux = []\n    for (var col of this.columns) {\n      auxColumnInfo[col]['hidden'] = !column_dict[col]\n\n      if (column_dict[col]) {\n        active_columns_aux.push(col)\n      }\n    }\n\n    this.setState({\n      active_columns: active_columns_aux,\n      columnInfo: auxColumnInfo\n    });\n  }\n\n  render () {\n    return (\n      <div className='panels'>\n\n      <div className='panel-info'>   \n        <Checkbox\n          onColumnChange = {this.handleColumnChange}\n          columns = {this.columns}\n          optionLabels = {this.headers}\n          />\n      </div>\n\n        <div className=\"panel-positions\">\n            {<MultipleStockTable\n            active_columns = {this.state.active_columns}\n            stocks_list = {this.state.stocks_list}\n            headers = {this.headers}\n            columnInfo = {this.state.columnInfo}\n            />}\n        </div>\n\n\n      </div>\n    )\n  }\n}\n\nclass Checkbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.options = this.props.columns;\n    this.state = {options: {}};\n    if (this.props.optionLabels) {\n      this.optionLabels = this.props.optionLabels;\n    }\n    else{\n      this.optionLabels = {};\n      for (let col of this.props.columns) {\n        this.optionLabels[col] = col;\n      }\n    }\n\n    for (var option of this.options){\n      this.state.options[option] = false;\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.checked;\n    const name = target.name;\n\n    // Creamos variable auxiliar que modificaremos y asignaremos al estado actual\n    var aux_options = this.state.options;\n    aux_options[name] = value;\n\n    this.props.onColumnChange(aux_options);\n  }\n\n  handleSubmit(event) {\n    alert('A name was submitted: ' + \n    this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    // const value = this.state.value;\n    const listBox = this.options.map((option) => \n    <div key={option}>\n      <label>\n        <input key={option} type=\"checkbox\" onChange={this.handleChange} name={option}/>\n        {\" \"}\n        {this.optionLabels[option]} \n      </label>\n    </div>\n    );\n\n    return (\n      <form onSubmit={this.handlleSubmit}>\n          {listBox}\n      </form>\n    );\n  }\n}\n\nclass TextInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: ''}\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n\n    const value = this.state.value;\n\n    event.preventDefault();\n    this.props.onChange(value);\n  }\n\n  render() {\n    return(\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Stock name:\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange}/>\n        </label>\n        <input type=\"submit\" value=\"Calcular\" />\n      </form>\n    )\n  }\n\n}\n\nlet multiple_stock_data = true;\nlet stock_data;\nmultiple_stock_data ? stock_data = <MultipleStockData/> : stock_data = <SingleStockData/> ;\n\nReactDOM.render(\n  <React.StrictMode>\n    {stock_data}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n/* \nTo-do:\n  - Ordenar códigos (Modularizar, eliminar código no usado, optimizar)\n  - Manejar funciones de subida de datos\n  - Mostrar / Borrar columnas desde tabla y no desde donde se mandan los datos\n  - Subir a la red\n*/"]},"metadata":{},"sourceType":"module"}