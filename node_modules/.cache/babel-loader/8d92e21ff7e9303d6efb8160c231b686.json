{"ast":null,"code":"var _jsxFileName = \"/Users/ignaciourrutiagajardo/Documents/Web/PlanningAdvisors/pa-app/src/TableComponents.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Checkbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.options = this.props.columns;\n    this.state = {\n      options: {}\n    };\n\n    if (this.props.optionLabels) {\n      this.optionLabels = this.props.optionLabels;\n    } else {\n      this.optionLabels = {};\n\n      for (let col of this.props.columns) {\n        this.optionLabels[col] = col;\n      }\n    }\n\n    for (var option of this.options) {\n      this.state.options[option] = false;\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.checked;\n    const name = target.name; // Creamos variable auxiliar que modificaremos y asignaremos al estado actual\n\n    var aux_options = this.state.options;\n    aux_options[name] = value;\n    this.props.onColumnChange(aux_options);\n  }\n\n  handleSubmit(event) {\n    alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    // const value = this.state.value;\n    const listBox = this.options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: this.handleChange,\n          name: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), \" \", this.optionLabels[option]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, option, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handlleSubmit,\n      children: listBox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass TextInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    const value = this.state.value;\n    event.preventDefault();\n    this.props.onChange(value);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Stock name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.value,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Calcular\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport { Checkbox, TextInput };","map":{"version":3,"sources":["/Users/ignaciourrutiagajardo/Documents/Web/PlanningAdvisors/pa-app/src/TableComponents.js"],"names":["Checkbox","React","Component","constructor","props","options","columns","state","optionLabels","col","option","handleChange","bind","handleSubmit","event","target","value","checked","name","aux_options","onColumnChange","alert","preventDefault","render","listBox","map","handlleSubmit","TextInput","setState","onChange"],"mappings":"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","sourcesContent":["class Checkbox extends React.Component {\n    constructor(props) {\n      super(props);\n      this.options = this.props.columns;\n      this.state = {options: {}};\n      if (this.props.optionLabels) {\n        this.optionLabels = this.props.optionLabels;\n      }\n      else{\n        this.optionLabels = {};\n        for (let col of this.props.columns) {\n          this.optionLabels[col] = col;\n        }\n      }\n  \n      for (var option of this.options){\n        this.state.options[option] = false;\n      }\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleChange(event) {\n      const target = event.target;\n      const value = target.checked;\n      const name = target.name;\n  \n      // Creamos variable auxiliar que modificaremos y asignaremos al estado actual\n      var aux_options = this.state.options;\n      aux_options[name] = value;\n  \n      this.props.onColumnChange(aux_options);\n    }\n  \n    handleSubmit(event) {\n      alert('A name was submitted: ' + \n      this.state.value);\n      event.preventDefault();\n    }\n  \n    render() {\n      // const value = this.state.value;\n      const listBox = this.options.map((option) => \n      <div key={option}>\n        <label>\n          <input key={option} type=\"checkbox\" onChange={this.handleChange} name={option}/>\n          {\" \"}\n          {this.optionLabels[option]} \n        </label>\n      </div>\n      );\n  \n      return (\n        <form onSubmit={this.handlleSubmit}>\n            {listBox}\n        </form>\n      );\n    }\n  }\n  \n  class TextInput extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {value: ''}\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleChange(event) {\n      this.setState({value: event.target.value});\n    }\n  \n    handleSubmit(event) {\n  \n      const value = this.state.value;\n  \n      event.preventDefault();\n      this.props.onChange(value);\n    }\n  \n    render() {\n      return(\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Stock name:\n            <input type=\"text\" value={this.state.value} onChange={this.handleChange}/>\n          </label>\n          <input type=\"submit\" value=\"Calcular\" />\n        </form>\n      )\n    }\n  \n  }\n\nexport{Checkbox, TextInput}"]},"metadata":{},"sourceType":"module"}